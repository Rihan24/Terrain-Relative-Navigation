from cmath import pi
import numpy as np
import cv2 as cv
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d
from math import sqrt,atan2,asin,pi
import time

def SURF_estimator(y,x,img,capture_resolution,sift,kp2, des2,flann,f,res):
    global j_num
    img2=img
    img1 = img2[int(round(y-capture_resolution[0]/2)):int(round(y+capture_resolution[0]/2)),int(round( x-capture_resolution[1]/2)):int(round(x+capture_resolution[1]/2))]   # queryImage
    img1=cv.resize(img1,(1000,1000),interpolation = cv.INTER_CUBIC) #AREA)    
    kp1, des1 = sift.detectAndCompute(img1,None)    
    matches = flann.knnMatch(des1,des2,k=2)
    pixel_coord,world_coord=[],[]    
    good=[]
    for i,(m,n) in enumerate(matches):
        if m.distance < 0.7*n.distance:
            #matchesMask[i]=[1,0]
            good.append(m)
    MIN_MATCH_COUNT=4
    if len(good)>MIN_MATCH_COUNT:
        src_pts = np.float32([ kp1[m.queryIdx].pt for m in good ]).reshape(-1,1,2)
        dst_pts = np.float32([ kp2[m.trainIdx].pt for m in good ]).reshape(-1,1,2)
        M, mask = cv.findHomography(src_pts, dst_pts, cv.RANSAC,5.0)
        matchesMask = mask.ravel().tolist()
        final_matches=0
        for i in range (len(good)):
            if matchesMask[i]==1:
                m=good[i]
                pt1 = kp1[m.queryIdx].pt
                pt2 = kp2[m.trainIdx].pt
                pixel_coord.append(pt1)
                world_coord.append(pt2) 
                final_matches=final_matches+1
        if final_matches<4:
            print('not found')
            return [-1,0,0,'not found']

    else:
        print( "Not  found " )
        matchesMask = None
        return [-1,0,0,'not found']

    pixel_vector=np.array(pixel_coord, dtype=np.float32) 
    world_vector=np.array(world_coord, dtype=np.float32)*res
    world_vector=np.append(world_vector,np.zeros((np.shape(world_vector)[0],1)),axis=1)
    fx=f#/160
    fy=f#/120
    K=np.array([[fx,0,500],[0,fy,500],[0,0,1]])
    #ret, mtx, dist, rvecs, tvecs = cv.calibrateCamera(world_vector, pixel_vector, (120,160), None, None)    
    _, rVec, tVec =cv.solvePnP(world_vector,pixel_vector,K,np.zeros(5))                    
    [Rt,jacobian] = cv.Rodrigues(rVec)    
    R = np.transpose(Rt)
    pos = -1*np.matmul(R,tVec)
    roll = atan2(-R[2][1], R[2][2])*(180/pi)
    pitch = asin(R[2][0])*(180/pi)
    yaw = atan2(-R[1][0], R[0][0]) *(180/pi)
    return [pos,roll,pitch,yaw]


    

x_pathl=[2026.667, 2026.665738972146, 2026.6580525947377, 2026.6405282606652, 2026.612793927859, 2026.57725670931, 2026.5388514503463, 2026.5047991292192, 2026.4843749170534, 2026.488685733218, 2026.5304571321667, 2026.6238293578062, 2026.7841624014418, 2027.0278498993628, 2027.3721417061088, 2027.8349749794845, 2028.434813613367, 2029.190495854362, 2030.121089938369, 2031.2457575830986, 2032.5836251726057, 2034.1536624698867, 2035.9745686935978, 2038.0646657949446, 2040.4417987708036, 2043.1232428491214, 2046.1256173826519, 2049.4648062870824, 2053.155884859603, 2057.2130528139746, 2061.6495733681495, 2066.477718220493, 2071.70871825067, 2077.352719781241, 2083.4187462360273, 2089.914665031301, 2096.84715953584, 2104.221705935927, 2112.0425548413186, 2120.3127174682577, 2129.0339562355803, 2138.206779609959, 2147.830441036355, 2157.902941789715, 2168.4210375839825, 2179.3802487744624, 2190.774873989609, 2202.598007028279, 2214.8415568585024, 2227.4962705538433, 2240.551759003376, 2253.99652523136, 2267.817995162644, 2282.00255066987, 2296.535564738513, 2311.4014385858413, 2326.583640569807, 2342.0647467239655, 2357.8264827544476, 2373.8497673350507, 2390.1147565364977, 2406.6008892259265, 2423.286933272654, 2440.151032396272, 2457.170753493133, 2474.3231342772674, 2491.5847310718163, 2508.931666586982, 2526.3396775206097, 2543.784161817408, 2561.2402254228828, 2578.6827283680404, 2596.0863300209066, 2613.4255333409164, 2630.6747279722294, 2647.8082320120275, 2664.800332289849, 2681.625322994002, 2698.257542481128, 2714.671408104959, 2730.8414489003335, 2746.7423359584873, 2762.348910329735, 2777.636208289563, 2792.5794838041493, 2807.1542280314497, 2821.336185693834, 2835.1013681583445, 2848.4260630606605, 2861.286840308774, 2873.660554302471, 2885.524342204642, 2896.855618100505, 2900.0000000574737, 2910.6209092067693, 2920.7033924832886, 2930.2703543875928, 2939.344786587531, 2947.9497049789547, 2956.1080876194483, 2963.842813646023, 2971.1766032878704, 2978.131959085191, 2984.7311084251305, 2990.995947505831, 2996.947986839804, 3002.608298407408, 3007.997464571703, 3013.1355288655677, 3018.0419487622594, 3022.73555054025, 3027.234486353689, 3031.556193619189, 3035.7173568302023, 3039.7338719100526, 3043.620813214421, 3047.3924032946043, 3051.0619855324167, 3054.641999757886, 3058.1439609606314, 3061.578441206123, 3064.9550548678326, 3068.2824472861885, 3071.568286965561, 3074.819261420227, 3078.0410767802223, 3081.2384612685455, 3084.4151726600867, 3087.5740098340993, 3090.7168285306016, 3093.844561422, 3096.9572426111517, 3100.054036666721, 3103.1332723066953, 3106.1924808414587, 3109.2284394873604, 3112.2372196614597, 3115.2142403693797, 3118.1543267958186, 3121.0517742108095, 3123.9004173003523, 3126.693705034959, 3129.424781184942, 3132.0865705951146, 3134.671871328923, 3137.1734527936314, 3139.584159957285, 3141.8970237687317, 3144.10537789153, 3146.202981862669, 3148.1841507877543, 3150.0000000315295, 3151.739232376181, 3153.361181852202, 3154.8739748914527, 3156.2855461766057, 3157.6036296456014, 3158.8357497953666, 3159.989213295511, 3161.0711009219276, 3162.0882598209373, 3163.047296113753, 3163.9545678522018, 3164.8161783353426, 3165.637969797661, 3166.4255174790196, 3167.184124086577, 3167.9188146590805, 3168.634331843621, 3169.335131595354, 3170.025379310374, 3170.7089464018227, 3171.3894073299907, 3172.070037096102, 3172.7538092106006, 3173.443394145761, 3174.1411582833352, 3174.849163367142, 3175.569166470983, 3176.302620492512, 3177.0506751826633, 3177.8141787215154, 3178.593679850692, 3179.389430572366, 3180.201389425447, 3181.029225349088, 3181.872322143774, 3182.729783540255, 3183.600438886897, 3184.4828494651338, 3185.3753154439364, 3186.2758834831184, 3187.182354996199, 3188.0922950822496, 3189.0030421385018, 3189.911718162304, 3190.815239753727, 3191.710329829144, 3192.5935300552374, 3193.4612140149256, 3194.3096011141606, 3195.1347712410134, 3195.9326801866846, 3196.699175838825, 3197.430015157617, 3198.120881944673, 3198.767405415365, 3199.36517958438, 3199.909783475043, 3200.0000002137895, 3200.4776677899144, 3200.9001348139163, 3201.2705039679795, 3201.5918097707417, 3201.867017015855, 3202.099019282836, 3202.2906375215643, 3202.4446187123285, 3202.5636346025576, 3202.650280522017, 3202.70707427828, 3202.7364551332957, 3202.740782863483, 3202.722336904322, 3202.6833155811637, 3202.625835427827, 3202.5519305946345, 3202.463552347237, 3202.362568657878, 3202.2507638908082, 3202.129838583105, 3202.0014093226946, 3201.8670087251103, 3201.728085510249, 3201.586004681343, 3201.442047806746, 3201.2974134071137, 3201.153217448684, 3201.010493944821, 3200.87019566693, 3200.733194966764, 3200.600284711014, 3200.4721793305707, 3200.349515985241, 3200.2328558461613, 3200.1226854967335, 3200.019418454249, 3199.923396813636, 3199.834893014493, 3199.754111733553, 3199.6811919035536, 3199.616208860585, 3199.559176621191, 3199.5100502908317, 3199.468728605003, 3199.4350566053945, 3199.408828451342, 3199.389790369638, 3199.377643742846, 3199.372048338704, 3199.3726256815426, 3199.378962567662, 3199.3906147261187, 3199.4071106261545, 3199.4279554334425, 3199.452635116264, 3199.4806207029615, 3199.5113726931595, 3199.5443456230605, 3199.5789927873993, 3199.614771119155, 3199.651146228469, 3199.6875976024967, 3199.7236239681733, 3199.75874881832, 3199.7925261038254, 3199.8245460932376, 3199.8544413999334, 3199.8818931812275, 3199.9066375076145, 3199.928471906642, 3199.9472620810193, 3199.9629488035207, 3199.9755549900583, 3199.985192951681, 3199.9920718287176, 3199.9965052066545, 3199.998918917394, 3199.999859024945, 3200.0]
y_pathl=[3500.000000000001, 3499.9978184900965, 3499.981799281395, 3499.936206420789, 3499.8435467470354, 3499.6848969104685, 3499.4402111294544, 3499.088610115472, 3498.608651598675, 3497.9785828857857, 3497.176575882204, 3496.1809450101628, 3494.9703484548204, 3493.523973170131, 3491.8217040763666, 3489.8442778811386, 3487.5734219557985, 3484.9919786990536, 3482.084015819692, 3478.8349229702403, 3475.2314951634503, 3471.262003403453, 3466.9162529634377, 3462.185629741756, 3457.0631351282473, 3451.543409812714, 3445.6227469673577, 3439.2990952350633, 3432.572051955387, 3425.4428470601, 3417.914318070168, 3409.990876626007, 3401.6784669828894, 3392.984516903357, 3383.917881378505, 3374.488779609995, 3364.708725684657, 3354.590453373553, 3344.147835487335, 3333.3957982198062, 3322.350230911486, 3311.0278916651037, 3299.4463092448195, 3287.623681691095, 3275.57877208302, 3263.330801879992, 3250.899342274601, 3238.30420398857, 3225.5653259436262, 3212.7026632391585, 3199.736074868519, 3186.6852116058344, 3173.569404495191, 3160.407554374044, 3147.2180228627217, 3134.018525251887, 3120.8260257198003, 3107.65663531128, 3094.525513110172, 3081.446771037242, 3068.433382705307, 3055.497096763502, 3042.6483551625192, 3029.896216772687, 3017.2482867867625, 3004.7106523392827, 2992.287824774337, 2979.9826889936317, 2967.796460316708, 2955.728649285154, 2943.7770348427034, 2931.937646323056, 2920.204754677286, 2908.5708733727206, 2897.0267693951173, 2885.5614847860297, 2874.1623691471955, 2862.8151235438368, 2851.5038562387135, 2840.2111506888004, 2828.9181462364404, 2817.6046319268426, 2806.249153883795, 2794.8291366754174, 2783.3210191018734, 2771.7004048368453, 2759.9422283546487, 2748.0209365749074, 2735.9106866565344, 2723.585560372992, 2711.0197955006206, 2698.188034651932, 2685.0655919857145, 2681.250000023197, 2667.732647455829, 2653.9540676523416, 2639.9734088386967, 2625.8488972240593, 2611.637696870637, 2597.395772448116, 2583.1777551152018, 2569.0368117710923, 2555.0245179198173, 2541.190734389904, 2527.583488152377, 2514.2488574798217, 2501.2308616890696, 2488.571355710542, 2476.309929726949, 2464.4838141239597, 2453.1277899956367, 2442.2741054477465, 2431.9523979410988, 2422.1896229182275, 2413.0099889559297, 2404.4348996863555, 2396.482902729642, 2389.169645880618, 2382.5078407925357, 2376.507234400553, 2371.17458832746, 2366.5136665148566, 2362.5252313223573, 2359.20704833735, 2356.5539001384677, 2354.5576092552183, 2353.207070566852, 2352.4882933827394, 2352.384453447732, 2352.875955114534, 2353.9405039262456, 2355.5531898520276, 2357.686581417962, 2360.310830976916, 2363.3937913587506, 2366.9011441454277, 2370.7965398117885, 2375.0417499769173, 2379.596832006384, 2384.420306210901, 2389.4693458814872, 2394.699980406018, 2400.067311708677, 2405.52574425497, 2411.029228867017, 2416.5315205885927, 2421.986450845594, 2427.3482141436252, 2432.5716695447045, 2437.6126571674977, 2442.4283299520466, 2446.869999999906, 2451.128439091549, 2455.086672362218, 2458.7495943723247, 2462.122274837091, 2465.20995441324, 2468.018040352614, 2470.552102022651, 2472.8178662936502, 2474.821212792683, 2476.568169024131, 2478.0649053567695, 2479.317729877274, 2480.333083110064, 2481.11753260348, 2481.677767382155, 2482.0205922654463, 2482.1529220519733, 2482.0817755701005, 2481.8142695942483, 2481.3576126270586, 2480.7190985472466, 2479.9061001230866, 2478.9260623914365, 2477.7864959022954, 2476.494969828627, 2475.05910494163, 2473.4865664511526, 2471.785056711251, 2469.9623077908755, 2468.026073909463, 2465.9841237374753, 2463.844232561761, 2461.6141743156486, 2459.301713473671, 2456.9145968109365, 2454.4605450268996, 2451.9472442336755, 2449.3823373085193, 2446.7734151107516, 2444.128007562672, 2441.4535745947433, 2438.757496954589, 2436.0470668800867, 2433.329478636279, 2430.6118189158856, 2427.901057103796, 2425.2040354048695, 2422.527458835476, 2419.877885078321, 2417.261714200789, 2414.685178236396, 2412.154330629584, 2409.6750355435183, 2407.252957031078, 2404.8935480685245, 2402.602039452437, 2400.3834285590187, 2399.999999996089, 2397.8727915627987, 2395.8260085308066, 2393.8614240394545, 2391.9806270434638, 2390.185021923402, 2388.475828296472, 2386.854081030784, 2385.3206304669893, 2383.876142850022, 2382.52110097466, 2381.2558050489006, 2380.0803737774404, 2378.9947456696063, 2377.9986805746776, 2377.091761448395, 2376.2733963534447, 2375.5428206981633, 2374.899099716218, 2374.3411311908494, 2373.8676484274365, 2373.477223477148, 2373.168270615897, 2372.939050081117, 2372.787672070732, 2372.712101006844, 2372.710160068258, 2372.7795359948905, 2372.9177841673336, 2373.1223339657045, 2373.390494410123, 2373.71946008741, 2374.1063173663497, 2374.548050905756, 2375.0415504580924, 2375.583617972836, 2376.1709750022565, 2376.8002704132596, 2377.468088409063, 2378.1709568637016, 2378.905355972878, 2379.667727224718, 2380.4544826935453, 2381.2620146606205, 2382.086705565074, 2382.924938287091, 2383.7731067701607, 2384.627626981237, 2385.4849482164936, 2386.341564753493, 2387.1940278533584, 2388.038958118341, 2388.873058205296, 2389.6931259010817, 2390.496067561151, 2391.2789119172885, 2392.038824254647, 2392.773120964528, 2393.4792844748445, 2394.154978561215, 2394.798064043818, 2395.4066148716956, 2395.9789345987374, 2396.513573254677, 2397.009344615144, 2397.4653438721434, 2397.8809657108213, 2398.255922795317, 2398.5902646649774, 2398.8843970480957, 2399.1391015928093, 2399.355556021532, 2399.5353547105915, 2399.6805296989914, 2399.79357213022, 2399.8774541293824, 2399.9356511204096, 2399.972164585328, 2399.9915452710557, 2399.9989168438333, 2399.999999999214]
z_pathl=[9999.999999999998, 9999.997653547747, 9999.979735721554, 9999.926780970987, 9999.815489667762, 9999.619164319894, 9999.308125019137, 9998.850104532823, 9998.2106234509, 9997.353345799249, 9996.240415530183, 9994.832774301029, 9993.090460951888, 9990.972893093405, 9988.439131215528, 9985.448125728277, 9981.958947345382, 9977.931001221838, 9973.324225256269, 9968.099272969059, 9962.217681367285, 9955.642024207264, 9948.336051065822, 9940.264812631138, 9931.394772624155, 9921.693906761517, 9911.131789170979, 9899.679666670238, 9887.310521320167, 9873.999121663379, 9859.72206305909, 9844.457797525243, 9828.186653498833, 9810.890845925393, 9792.554477088606, 9773.163528591009, 9752.705844896685, 9731.171108846998, 9708.550809560216, 9684.838203126066, 9660.028266506153, 9634.117645051141, 9607.104594045753, 9578.988914692452, 9549.771884944823, 9519.45618560158, 9488.045822072152, 9455.54604222482, 9421.963250728357, 9387.304920298127, 9351.579500257567, 9314.796322826072, 9276.965507544173, 9238.097864246998, 9198.20479499699, 9157.29819538678, 9115.390355623224, 9072.493861803528, 9028.621497794447, 8983.786148125473, 8938.000702307008, 8891.277960984444, 8843.630544339134, 8795.070803147186, 8745.610732907062, 8695.2618914469, 8644.03532042256, 8591.941471117305, 8538.990134954101, 8485.190379131507, 8430.55048779404, 8375.077909148074, 8318.779208934126, 8261.660030666564, 8203.725063051646, 8144.97801499487, 8085.421598608564, 8025.057520630704, 7963.886482665903, 7901.908190659513, 7839.121374015796, 7775.5238147711725, 7711.112387233417, 7645.883108497808, 7579.831200251204, 7512.951162274954, 7445.236858057637, 7376.681612928547, 7307.2783251229375, 7237.019590189921, 7165.8978391539895, 7093.905490841182, 7021.035118780749, 7000.000000206728, 6926.026028797192, 6851.375169357647, 6776.255003261185, 6700.869794407383, 6625.420009644466, 6550.101848381348, 6475.1067821778, 6400.621105102908, 6326.825495650115, 6253.894590998221, 6181.996574407327, 6111.292776539169, 6041.937291490336, 5974.076608327945, 5907.849258916889, 5843.38548282722, 5780.806910111623, 5720.226262740893, 5661.74707548767, 5605.463437047292, 5551.459752183786, 5499.810525691762, 5450.580168961809, 5403.822829939832, 5359.582247267768, 5317.891629396785, 5278.773559460329, 5242.2399266970315, 5208.291885212224, 5176.919840867238, 5148.103467086112, 5121.811750367182, 5098.003066291218, 5076.6252868124575, 5057.615919623684, 5040.90228038338, 5026.401698594549, 5014.021757923256, 5003.6605717490165, 4995.207094730853, 4988.541471183504, 4983.535421050314, 4980.05266426022, 4977.9493842633965, 4977.074731526955, 4977.271367787733, 4978.376051844476, 4980.220267683879, 4982.630895725742, 4985.430927977781, 4988.440227890707, 4991.476335699204, 4994.355320041854, 4996.892676644726, 4998.904274862725, 5000.207352863508, 5000.621562244662, 5000.000000000583, 4998.16989564034, 4995.099983661093, 4990.785053697439, 4985.220293016731, 4978.401299823858, 4970.3240973428365, 4960.985148694286, 4950.381372588412, 4938.510159852562, 4925.369390812684, 4910.957453548095, 4895.273263039147, 4878.3162812262635, 4860.0865380009, 4840.584653146632, 4819.811859250161, 4797.770025602065, 4774.461683105239, 4749.890050212003, 4724.059059907955, 4696.973387762555, 4668.638481065376, 4639.060589067642, 4608.246794348259, 4576.205045323364, 4542.944189919686, 4508.474010429465, 4472.805259567798, 4435.949697750879, 4397.920131614494, 4358.730453792443, 4318.395683974162, 4276.932011260284, 4234.356837836171, 4190.688823982644, 4145.947934442662, 4100.155486164051, 4053.334197436743, 4005.5082384451016, 3956.703283252733, 3906.946563241727, 3856.266922022689, 3804.6948718374188, 3752.2626514721196, 3699.004285700561, 3644.9556462777546, 3590.154514500973, 3534.6406453609306, 3478.4558332986053, 3421.6439795901097, 3364.2511613773604, 3306.3257023645056, 3247.9182451983143, 3189.0818255540435, 3129.871947943262, 3070.3466632663185, 3010.566648124608, 2999.999999994885, 2939.996447975318, 2879.847518863695, 2819.5882473936144, 2759.253972466475, 2698.880312485948, 2638.5031397908606, 2578.1585541743043, 2517.8828554778447, 2457.712515250365, 2397.684147459324, 2337.8344782436325, 2278.200314696929, 2218.8185126693497, 2159.725943577905, 2100.9594602122597, 2042.5558615267146, 1984.551856405029, 1926.9840263888764, 1869.8887873572385, 1813.3023501452408, 1757.2606800937065, 1701.7994555138139, 1646.9540250599966, 1592.7593639970437, 1539.2500293508347, 1486.4601139319566, 1434.423199220415, 1383.1723071000451, 1332.739850431928, 1283.1575824554457, 1234.456545003879, 1186.6670155276515, 1139.8184529087594, 1093.9394420586032, 1049.0576372863725, 1005.1997044278105, 962.3912617224123, 920.6568194271531, 880.0197181570111, 840.5020659397705, 802.1246739747294, 764.9069910828548, 728.8670368386374, 694.0213333700958, 660.384835820325, 627.9708614512347, 596.7910173894488, 566.8551269893069, 538.1711548161111, 510.7451302273548, 484.58106954491814, 459.6808968092373, 436.0443630978989, 413.66896440510754, 392.54985806392506, 372.6797777041502, 354.048946733732, 336.644990330009, 320.4528459345165, 305.45467223529704, 291.6297566261492, 278.9544211355678, 267.4019268100965, 256.9423765388492, 247.5426163171942, 239.1661349265196, 231.77296202554135, 225.31956464488758, 219.75874206377193, 215.0395190672134, 211.1070375663694, 207.902446576918, 205.36279053258477, 203.42089593835408, 202.00525634113, 201.03991560579743, 200.44434949418064, 200.13334552757442, 200.016881126503, 200.0000000114087]
x_path=[2026.667, 2026.5304571321667, 2032.5836251726057, 2061.6495733681495, 2129.0339562355803, 2240.551759003376, 2390.1147565364977, 2561.2402254228828, 2730.8414489003335, 2873.660554302471, 2900.0000000574737, 2984.7311084251305, 3035.7173568302023, 3071.568286965561, 3103.1332723066953, 3132.0865705951146, 3150.0000000315295, 3163.047296113753, 3170.7089464018227, 3177.8141787215154, 3186.2758834831184, 3195.1347712410134, 3200.0000002137895, 3202.650280522017, 3202.2507638908082, 3200.87019566693, 3199.754111733553, 3199.372048338704, 3199.5789927873993, 3199.9066375076145, 3200.0]
y_path=[3500.000000000001, 3497.176575882204, 3475.2314951634503, 3417.914318070168, 3322.350230911486, 3199.736074868519, 3068.433382705307, 2943.7770348427034, 2828.9181462364404, 2711.0197955006206, 2681.250000023197, 2541.190734389904, 2422.1896229182275, 2359.20704833735, 2360.310830976916, 2405.52574425497, 2446.869999999906, 2476.568169024131, 2481.3576126270586, 2468.026073909463, 2444.128007562672, 2417.261714200789, 2399.999999996089, 2382.52110097466, 2373.8676484274365, 2373.390494410123, 2378.905355972878, 2387.1940278533584, 2394.798064043818, 2399.1391015928093, 2399.999999999214]
z_path=[9999.999999999998, 9996.240415530183, 9962.217681367285, 9859.72206305909, 9660.028266506153, 9351.579500257567, 8938.000702307008, 8430.55048779404, 7839.121374015796, 7165.8978391539895, 7000.000000206728, 6253.894590998221, 5605.463437047292, 5176.919840867238, 4995.207094730853, 4985.430927977781, 5000.000000000583, 4925.369390812684, 4724.059059907955, 4397.920131614494, 3956.703283252733, 3421.6439795901097, 2999.999999994885, 2397.684147459324, 1813.3023501452408, 1283.1575824554457, 840.5020659397705, 510.7451302273548, 305.45467223529704, 215.0395190672134, 200.0000000114087]
img_data = cv.imread('database_img.png',cv.IMREAD_GRAYSCALE) # trainImage
#(thresh, img_data) = cv.threshold(img_data, 128, 255, cv.THRESH_BINARY | cv.THRESH_OTSU)
res= 50
f=100
fx=f
fy=f

error=[]
roll_lst,pitch_lst,yaw_lst=[],[],[]
j_num=[]
z_track=[]
sift = cv.xfeatures2d.SURF_create()
kp2, des2 = sift.detectAndCompute(img_data,None)
FLANN_INDEX_KDTREE = 1
index_params = dict(algorithm = FLANN_INDEX_KDTREE, trees = 5)
search_params = dict(checks=500)   # or pass empty dictionary
flann = cv.FlannBasedMatcher(index_params,search_params)
x_est,x_error=[],[]
y_est,y_error=[],[]
z_est,z_error=[],[]
figure=plt.figure()
for i in range(len(x_path)):
    #try:
    capture_resolution= [((z_path[i])/res)*1000*(1.0/fy),((z_path[i])/res)*1000*(1.0/fx)]  
                          #[((z_path[i]+200)/res)*256*(1.0/f),((z_path[i]+200)/res)*320*(1.0/f)]
    #print(z_path[i],res,f,capture_resolution,((z_path[i]+200)/res)*(1.0/f))
    y_true,x_true, z_true= int(round(y_path[i]))*res, int(round(x_path[i]))*res,int(round((z_path[i])))
    print (capture_resolution,z_true)
    [pos,roll,pitch,yaw]=SURF_estimator(y_true/res,x_true/res,img_data,capture_resolution,sift,kp2, des2,flann,f,res)
    #print(pos.shape)
    if yaw=='not found':
        #i=i+5
        continue
    xerr,yerr,zerr=abs(x_true-pos[0][0]),abs(y_true-pos[1][0]),abs((z_true)-(-pos[2][0]))
    print(xerr, yerr,zerr)
    print('')
    euler_error=sqrt(pow(yerr,2)+pow(xerr,2)+pow(zerr,2))
    if euler_error<200:
        error.append(euler_error)
        #print(z_true)
        z_est.append(z_true)
        x_error.append(xerr)
        y_error.append(yerr)
        z_error.append(zerr)
        roll_lst.append(roll)
        pitch_lst.append(pitch)
        yaw_lst.append(yaw)
        x_est.append(x_true)
        y_est.append(y_true)
    #i=i+5

    #except:
    #error.append(100)
    #continue
    

#plt.plot(np.arange(0,len(error)*2,2),error)
plt.plot(z_est,error)
#plt.plot(np.arange(0,len(j_num)*2,2),j_num)
plt.xlabel('altitude (m)')
plt.title('euclidean error (m)')
plt.show()

plt.plot(np.arange(0,len(x_error)*2,2),x_error)
plt.title('x error')
plt.show()

plt.plot(np.arange(0,len(y_error)*2,2),y_error)
plt.title('y error')
plt.show()

plt.plot(np.arange(0,len(z_error)*2,2),z_error)
plt.title('z error')
plt.show()

plt.plot(np.arange(0,len(roll_lst)*2,2),roll_lst)
plt.title('roll (degrees)')
plt.show()

plt.plot(np.arange(0,len(pitch_lst)*2,2),pitch_lst)
plt.title('pitch (degrees)')
plt.show()

plt.plot(np.arange(0,len(yaw_lst)*2,2),yaw_lst)
plt.title('yaw (degrees)')
plt.show()

plt.figure(figsize=(10,5))
ax = plt.axes(projection ='3d')
plt.title('Absolute position estimation')
ax.plot3D(np.array(x_pathl)*res, np.array(y_pathl)*res, z_pathl, 'b',label='True trajectory')
ax.plot3D(x_est, y_est, z_est, 'r.',label='Estimated trajectory')
plt.legend()
plt.show()
